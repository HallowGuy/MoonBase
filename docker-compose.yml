services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_DB: ${POSTGRES_DB:-system_database}
      POSTGRES_HOST_AUTH_METHOD: trust  # Ã  supprimer ou ajuster en production
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:latest
    depends_on:
      - postgres
    command: >
      -url=jdbc:postgresql://postgres:5432/system_database
      -user=user
      -password=pass
      -connectRetries=10
      -schemas=public,keycloak,app
      migrate
    volumes:
      - ./db-init:/flyway/sql

  keycloak:
    build: ./keycloak
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL: ${KC_DB_URL:-jdbc:postgresql://postgres:5432/system_database?currentSchema=keycloak}
      KC_DB_USERNAME: ${KC_DB_USERNAME:-user}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-pass}
      KC_DB_SCHEMA: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json:ro
    depends_on:
      - postgres
      - flyway

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_BASEPATH: /kibana
      SERVER_REWRITEBASEPATH: "true"
    depends_on:
      - elasticsearch
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/prometheus'
      - '--web.external-url=http://localhost/prometheus'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    restart: unless-stopped
    environment:
      GF_SERVER_ROOT_URL: "http://localhost/grafana"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"

  status:
    build: ./status
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - keycloak
      - elasticsearch
      - kibana
      - prometheus
      - grafana

  backend:
    build: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://user:pass@postgres:5432/system_database?sslmode=disable&search_path=app}
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    depends_on:
      - keycloak

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - status
      - grafana
      - kibana
      - keycloak
      - prometheus
      - elasticsearch

volumes:
  pgdata:
  esdata:
