version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: ${POSTGRES_DB:-system_database}
    secrets:
      - postgres_user
      - postgres_password
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:latest
    depends_on:
      - postgres
    command: >
      -url=jdbc:postgresql://postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-system_database}
      -user=$(cat /run/secrets/postgres_user)
      -password=$(cat /run/secrets/postgres_password)
      -connectRetries=10
      -schemas=public,keycloak,app,grafana
      migrate
    volumes:
      - ./db-init:/flyway/sql
    secrets:
      - postgres_user
      - postgres_password

  keycloak:
    build: ./keycloak
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-system_database}?currentSchema=keycloak
      KC_DB_USERNAME_FILE: /run/secrets/postgres_user
      KC_DB_PASSWORD_FILE: /run/secrets/postgres_password
      KC_DB_SCHEMA: keycloak
      KEYCLOAK_ADMIN_FILE: /run/secrets/keycloak_admin
      KEYCLOAK_ADMIN_PASSWORD_FILE: /run/secrets/keycloak_password
    volumes:
      - ./keycloak/keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json:ro
      - ./keycloak/realm-t1.json:/opt/keycloak/data/import/realm-t1.json:ro
      - ./keycloak/realm-t2.json:/opt/keycloak/data/import/realm-t2.json:ro
    secrets:
      - postgres_user
      - postgres_password
      - keycloak_admin
      - keycloak_password
    depends_on:
      - postgres
      - flyway

  opensearch:
    image: opensearchproject/opensearch:latest
    environment:
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - osdata:/usr/share/opensearch/data
      - ./opensearch/opensearch.yml:/usr/share/opensearch/config/opensearch.yml:ro
    restart: unless-stopped

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    environment:
      SERVER_BASEPATH: /dashboards
      SERVER_REWRITEBASEPATH: "true"
      OPENSEARCH_HOSTS: '["http://opensearch:${OPENSEARCH_PORT:-9200}"]'
    volumes:
      - ./opensearch-dashboards/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml:ro
    depends_on:
      - opensearch
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/prometheus'
      - '--web.external-url=http://localhost/prometheus'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
      - postgres
    restart: unless-stopped
    environment:
      GF_SERVER_ROOT_URL: "http://localhost/grafana"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_HOST: "postgres:${POSTGRES_PORT:-5432}"
      GF_DATABASE_NAME: ${POSTGRES_DB:-system_database}
      GF_DATABASE_USER_FILE: /run/secrets/postgres_user
      GF_DATABASE_PASSWORD_FILE: /run/secrets/postgres_password
      GF_DATABASE_SSL_MODE: "disable"
      GF_DATABASE_SCHEMA: "grafana"
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_password
    secrets:
      - postgres_user
      - postgres_password
      - grafana_password
    volumes:
      - grafana-storage:/var/lib/grafana

  status:
    build: ./status
    ports:
      - "${STATUS_PORT:-3001}:3001"
    depends_on:
      - postgres
      - keycloak
      - opensearch
      - opensearch-dashboards
      - prometheus
      - grafana

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgres://user:pass@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-system_database}?sslmode=disable&search_path=app
    depends_on:
      - postgres

  frontend:
    build: ./frontend
    depends_on:
      - keycloak

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: unless-stopped
    depends_on:
      - status
      - grafana
      - opensearch-dashboards
      - keycloak
      - prometheus
      - opensearch

volumes:
  pgdata:
  osdata:
  grafana-storage:

secrets:
  postgres_user:
    file: ${POSTGRES_USER_FILE:-./secrets/postgres_user.txt}
  postgres_password:
    file: ${POSTGRES_PASSWORD_FILE:-./secrets/postgres_password.txt}
  keycloak_admin:
    file: ${KEYCLOAK_ADMIN_FILE:-./secrets/keycloak_admin.txt}
  keycloak_password:
    file: ${KEYCLOAK_PASSWORD_FILE:-./secrets/keycloak_password.txt}
  grafana_password:
    file: ${GRAFANA_PASSWORD_FILE:-./secrets/grafana_password.txt}
