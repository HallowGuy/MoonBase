events {}

http {
    server {
        listen 80;

        # Allow cross origin requests for all proxied services
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' '*';

        # Redirige vers Keycloak par défaut
        location / {
            proxy_pass http://keycloak:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Page de confirmation
        location /online {
            proxy_pass http://status:3001/online;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Statut des services
        location /status/ {
            proxy_pass http://status:3001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Allow access without trailing slash
        location = /status {
            return 302 /status/;
        }

        # Keycloak
        location /keycloak/ {
            proxy_pass http://keycloak:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /keycloak {
            return 302 /keycloak/;
        }

        # Kibana
        location /kibana/ {
            proxy_pass http://kibana:5601;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /kibana {
            return 302 /kibana/;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /prometheus {
            return 302 /prometheus/;
        }

        # Grafana
        location /grafana/ {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /grafana {
            return 302 /grafana/;
        }

        # Elasticsearch (optionnel)
        # Permet d'accéder via /elasticsearch/ ou /elastic/
        location /elasticsearch/ {
            proxy_pass http://elasticsearch:9200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /elasticsearch {
            return 302 /elasticsearch/;
        }

        location /elastic/ {
            proxy_pass http://elasticsearch:9200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Redirige /elastic vers /elastic/ pour plus de souplesse
        location = /elastic {
            return 302 /elastic/;
        }
    }
}
